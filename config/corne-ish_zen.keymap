/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWERTY 0
#define NUMROW 1
#define ARROWS 2
#define NUMPAD 3

&mt {
  flavor = "tap-preferred";
  //tapping_term_ms = <150>;
};

&kscan0 {
    debounce-period = <10>;
};


#define COMBO(NAME, KEYPOS) \
    combo_##NAME { \
        timeout-ms = <100>; \
        key-positions = <KEYPOS>; \
        bindings = <&kp NAME>; \
    };

    combos {
        compatible = "zmk,combos";
        COMBO(NUM_1, 1 13)
        COMBO(NUM_2, 2 14)
        COMBO(NUM_3, 3 15)
        COMBO(NUM_4, 4 16)
        COMBO(NUM_5, 5 17)
        COMBO(NUM_6, 6 18)
        COMBO(NUM_7, 7 19)
        COMBO(NUM_8, 8 20)
        COMBO(NUM_9, 9 21)
        COMBO(NUM_0, 10 22)

        COMBO(ESC, 1 2)
        COMBO(BSPC, 9 10)
        COMBO(MINUS, 3 4)
        COMBO(DELETE, 8 9)
        COMBO(LPAR, 4 5)
        COMBO(RPAR, 6 7)
        COMBO(BACKSLASH, 18 28)
        COMBO(SCLN, 21 22)
    };
    };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
  &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &mt LCTRL S &mt LALT D &mt LSHFT F &kp G   &kp H &mt RSHFT J  &mt RALT K     &mt RCTRL L   &mt RGUI APOSTROPHE  &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp ESC &lt 2 BSPC &lt 3 ENTER   &lt 1 TAB &kp SPACE &kp DELETE
                        >;
                };
                numrow_layer {
                        label = "NUMROW";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &kp LPAR  &kp RPAR &kp SEMI    &trans &trans
                          	        &kp LGUI     &trans       &kp SPACE      &trans  &trans   &kp RALT
                        >;
                };

                arrows_layer {
                        label = "ARROWS";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT     &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans          &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans &trans          &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans &kp SPACE       &kp RET &trans  &kp RALT
                        >;
                };

                numpad_layer {
                        label = "NUMPAD";
                        bindings = < 
   &none &none &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp MINUS         &kp KP_EQUAL    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS &kp BSPC
   &none &none &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS           &kp KP_ASTERISK &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS  &none
   &none &none &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_SLASH      &kp KP_SLASH    &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_ENTER &none
                             &kp KP_DOT &kp KP_N0 &trans       &kp SPC &kp KP_N0 &kp KP_DOT
                        >;
                };
        };
};

