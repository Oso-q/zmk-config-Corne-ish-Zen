/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWERTY 0
#define NAV 1
#define NUMPAD 2
#define FUNCTION 3

&mt {
  flavor = "tap-preferred";
  //tapping_term_ms = <250>;
};

&kscan0 {
    debounce-period = <10>;
};


#define COMBO(NAME, KEYPOS) \
    combo_##NAME { \
        timeout-ms = <50>; \
        key-positions = <KEYPOS>; \
        bindings = <&kp NAME>; \
    };
/ {
    behaviors {
        i3: behavior_ithree {
			compatible = "zmk,behavior-hold-tap";
			label = "I_THREE";
			flavor = "tap-preferred";
			tapping-term-ms = <500>;
            #binding-cells = <2>;
			bindings = <&kp>, <&kp>;
		};
    };

    combos {
        compatible = "zmk,combos";
        COMBO(NUM_1, 1 13)
        COMBO(NUM_2, 2 14)
        COMBO(NUM_3, 3 15)
        COMBO(NUM_4, 4 16)
        COMBO(NUM_5, 5 17)
        COMBO(NUM_6, 6 18)
        COMBO(NUM_7, 7 19)
        COMBO(NUM_8, 8 20)
        COMBO(NUM_9, 9 21)
        COMBO(NUM_0, 10 22)

        COMBO(ESC, 1 2)
        COMBO(BSPC, 9 10)
        COMBO(MINUS, 3 4)
        COMBO(DELETE, 8 9)
        COMBO(LPAR, 4 5)
        COMBO(RPAR, 6 7)
        COMBO(TAB, 2 3)
        COMBO(SCLN, 21 22)
    };
    };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |     |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
  &kp TAB    &kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y  &kp U   &kp I      &kp O    &kp P     &kp BSPC 
   &kp ESC  &kp A  &mt LCTRL S  &mt LALT D  &mt LSHFT F  &kp G    &kp H  &mt RSHFT J   &mt RALT K  &mt RCTRL L  &mt RGUI APOSTROPHE  &kp SEMI 
   &kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp N  &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT 
                  &kp LCTRL    &LT 1 DELETE   &LT 2 BSPC      &LT 1 SPACE    &LT 3 ENT  &kp LSHIFT 
                        >;
                };
                nav_layer {
                        label = "NAV";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
 &kp TAB     &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp LC(Y)                          &trans     &kp WH_L     &kp WH_D     &kp WH_U     &kp WH_R  &kp BSPC 
      &kp LCTL  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp PGUP                       &trans  &kp MS_L    &kp MS_D &kp MS_U  &kp MS_R  &trans 
      &kp LSFT  &kp PAUSE  &kp INSERT  &kp HOME  &kp END  &kp PGDOWN                       &trans  &kp ACL0  &kp ACL1  &kp ACL2  &kp WH_D  &trans 
                                          &trans  &trans   &trans      &kp BTN3    &kp BTN1  &kp BTN2                        
        >;
                };

                numpad_layer {
                        label = "NUMPAD";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
       &kp TAB  &kp GRAVE  &kp KP_7  &kp KP_8   &kp KP_9  &kp MINUS                       &kp MINUS  &kp AMPERSAND  &kp ASTR  &kp LPRN  &kp RPRN  &kp BSPC 
      &kp LCTL &kp PIPE  &kp KP_4  &kp KP_5  &kp KP_6  &kp EQUAL                       &kp EQUAL   &kp DOLLAR  &kp PERCENT  &kp CIRCUMFLEX  &kp LEFT_CURLY_BRACE   &kp GRV 
      &kp LSFT  &kp SLASH  &kp KP_1  &kp KP_2  &kp KP_3  &kp KP_DOT                       &kp SLASH  &kp EXCLAIM  &kp AT  &kp HASH  &kp RIGHT_CURLY_BRACE  &kp TILD 
                                          &kp KP_0    &trans   &trans      &trans  &trans  &kp RALT 
                        >;
                };

                function_layer {
                        label = "FUNCTION";
                        bindings = < 
        &trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp PSCREEN                        &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)  &kp LC(Y)  &trans 
      &trans  &kp F5  &kp F6  &kp F7  &kp F8  &kp SCROLLLOCK                        &bt BT_CLR  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans 
      &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp PAUSE                       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans 
                                          &trans  &trans   &trans      &trans  &trans  &trans 
                        >;
                };
        };
};


